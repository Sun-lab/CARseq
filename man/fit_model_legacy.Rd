% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loglik.R
\name{fit_model_legacy}
\alias{fit_model_legacy}
\title{fit a CARseq negative binomial model}
\usage{
fit_model_legacy(init = NULL, cell_type_specific_variables,
  other_variables, read_depth, cellular_proportions, counts,
  is_active = NULL, fix_overdispersion = FALSE,
  number_of_resample = 20)
}
\arguments{
\item{init}{a numeric vector of (K + H x M + 1) corresponding to the initial value of
c(beta, gamma, overdispersion). Can be NULL.}

\item{cell_type_specific_variables}{an array of n_B x H x K of cell type-independent variables.}

\item{other_variables}{a design matrix of n_B x M of cell type-specific variables. Can be NULL.}

\item{read_depth}{a vector of n_B sample-specific read depths.}

\item{cellular_proportions}{a matrix of n_B x H of cellular proportions.}

\item{counts}{A vector of n_B total read counts observed.}

\item{is_active}{A logical vector of length (K + H x M), recording which predictors are included in the model.}

\item{fix_overdispersion}{logical. If \code{TRUE}, the overdispersion parameter will not be updated.}

\item{number_of_resample}{numeric.}
}
\description{
\code{fit_model_legacy} fits a negative binomial distribution 
whose mean is a sum of nonnegative terms with covariates.
The overdispersion parameter is estimated by maximizing the 
adjusted profile log-likelihood.
}
\details{
This is an old version where the result is highly dependent on initial values.
Please use \code{\link{fit_model}} instead. The arguments are a little different.
}
\examples{
library(CARseq)
set.seed(1234)
H = 4
n_B = 60
K = 1
M = 3
cell_type_specific_variables = array(0, dim=c(n_B, H, M))
cell_type_specific_variables[1:(n_B/3), , 1] = 1
cell_type_specific_variables[(n_B/3+1):(n_B*2/3), , 2] = 1
cell_type_specific_variables[(n_B*2/3+1):n_B, , 3] = 1
other_variables = matrix(runif(n_B * K, min = -1, max = 1), nrow=n_B, ncol=K)
read_depth = round(runif(n_B, min = 50, max = 100))
cellular_proportions = matrix(runif(n_B * H), nrow = n_B, ncol = H)
cellular_proportions = cellular_proportions / rowSums(cellular_proportions)
counts = round(runif(n_B, min = 100, max = 200))
is_active = rep(TRUE, K + H*M)
res = CARseq:::fit_model_legacy(init = NULL, cell_type_specific_variables, other_variables, read_depth, cellular_proportions, counts, is_active)
str(res)
}
